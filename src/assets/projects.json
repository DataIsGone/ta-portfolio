{
    "0": {
        "projTitle": "Hablo Gato",
        "projSection": ["Overview", "Procedural NPC Generator", "2.5D Art Style Development"],
        "projOverview": [
            ["Course", "Oregon State University's CS457: Online Capstone (2.5 months)"],
            ["Tools", "Procreate iOS, Adobe Photoshop, Autodesk Maya, Unity3D, Kenney 3D assets"],
            ["Languages", "C#"],
            ["Desc.", "Hablo Gato is a prototype VR game that provides a language-immersion experience through speech recognition. The idea behind this was to explore what more affordable and accessible options for immersive language learning could look like."]
        ],
        "projContent": {
            "Procedural NPC Generator": {
                "desc": "I wrote a procedural NPC generator in C# to ensure that my team did not need to set up individual and animate background characters. This saved us time when it came to populating a busy and lively world.",
                "img": {
                    "0": ["../src/assets/img/NPC_gen_1.gif", "test 1"],
                    "1": ["../src/assets/img/NPC_gen_1.gif", "test 2"]
                }
            },
            "2.5D Art Style Development": {
                "desc": "I handled the entire development of our 2.5D Paper Mario-inspired art style, where the characters are 2D and the environment is 3D. I opted for this to avoid both high vertex count (200k+) and lighting (for most scenes) on the Quest 2â€™s mobile processor. Because this was a computer science course, I made these choices to give our team more time to focus on programming-related tasks.",
                "img": {
                    "0": ["../src/assets/img/follow_me_curr.gif", "test 1"]
                }
            }
        }
    },
    "1": {
        "projTitle": "Microsoft Holograms",
        "projSection": ["Overview", "Demo Reel"],
        "projOverview": [
            ["Contract Duration", "August 2017 - February 2019"],
            ["Tools", "Proprietary systems, Autodesk Maya, Adobe Photoshop, Unity3D"],
            ["Languages", "C#"],
            ["Desc.", "At Microsoft's Mixed Reality Capture Studios, I was a contract Processing Technician and 3D Generalist on holograms (moving photogrammetry) for internal and external clients."]
        ],
        "projContent": {
            "Demo Reel": {
                "desc": "Please Note: I can only show published footage in this reel due to Microsoft's policy. Any wireframes, in-progress shots, etc. displayed have been shown publicly by Microsoft and/or their clients.",
                "video": {
                    "0": ["800004234", "test 1"]
                }
            }
        }
    },
    "2" :{
        "projTitle": "Starmetry",
        "projSection": ["Overview", "Point & Click Controls in 2.5D", "Reference System", "Math Problem Generator", "Base Pixel Shader"],
        "projOverview": [
            ["Course", "Oregon State University's CS4xx: Special Projects (2.5 months)"],
            ["Roles", "Solo project - all development and art was made by me"],
            ["Tools", "Blender, Procreate iOS, Pribambase, Adobe Photoshop, Unity3D"],
            ["Languages", "C#, Yarn"],
            ["Desc.", "Starmetry is my attempt to prototype an educational math game level and explore the idea of games as an educational tool. I was especially interested in creating a game accessible to adults."]
        ],
        "projContent": {
            "Point & Click Controls in 2.5D": {
                "desc": "I wrote a procedural NPC generator in C# to ensure that my team did not need to set up individual and animate background characters. This saved us time when it came to populating a busy and lively world.",
                "img": {
                    "0": ["../src/assets/img/starmetry/movement.gif", "test 1"]
                }
            },
            "Reference System": {
                "desc": "I wrote a procedural NPC generator in C# to ensure that my team did not need to set up individual and animate background characters. This saved us time when it came to populating a busy and lively world.",
                "img": {
                    "0": ["../src/assets/img/starmetry/ref_book.gif", "test 1"]
                }
            },
            "Math Problem Generator": {
                "desc": "To create replayability, I established a system that selects random integers and calculates not only the correct answer, but plausible answers within range to make the answer a little less obvious. These values are then sent as variables into Yarn's DialogueRunner class, determining what branching narrative will be displayed depending on what answer the player gives. I formatted this system to not only work with problems in the main story, but also repeatable side quests that would reward the player with items, currency, etc. in future iterations of the game.",
                "img": {
                    "0": ["../src/assets/img/starmetry/mathProblem_width.gif", "test 1"],
                    "1": ["../src/assets/img/starmetry/mathProblem_wheel.gif", "test 2"]
                }
            },
            "Pixel Art Shader": {
                "desc": "To save time on hand animating pixel art sprites and textures, I opted to create a base pixel art shader. This base was used to animate the river, color the star (ball object) and produce pixelated particle effects for the star.",
                "subdesc": {
                    "0": {
                        "title": "Base Pixel Art Shader",
                        "desc": "desc 1",
                        "img": {
                            "0": ["../src/assets/img/starmetry/river_shader.gif", "test 1"],
                            "1": ["../src/assets/img/starmetry/ss_base_shader.png", "test 2"]
                        }
                    },
                    "1": {
                        "title": "Animated Pixel Art Shader",
                        "desc": "desc 2",
                        "img": {
                            "0": ["../src/assets/img/starmetry/star_shader.gif", "test 3"],
                            "1": ["../src/assets/img/starmetry/ss_river_shader.png", "test 4"]
                        }
                    }
                }
            }
        }
    }
}